version: '3.8'

services:
  logistics-db:
    container_name: logistics_db
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: logistics_db
      POSTGRES_PASSWORD: logistics_db
      POSTGRES_DB: logistics
    volumes:
      - logistics_db:/var/lib/postgresql/data
      - ./postgres-init/logistics/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tiniping_network

  user-db:
    container_name: user_db
    image: postgres
    restart: always
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: user_db
      POSTGRES_PASSWORD: user_db
      POSTGRES_DB: user
    volumes:
      - user_db:/var/lib/postgresql/data
      - ./postgres-init/users/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tiniping_network

  hub-db:
    container_name: hub_db
    image: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: hub_db
      POSTGRES_PASSWORD: hub_db
      POSTGRES_DB: hub
    volumes:
      - hub_db:/var/lib/postgresql/data
      - ./postgres-init/hubs/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tiniping_network

  ai-db:
    container_name: ai_db
    image: postgres
    restart: always
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ai_db
      POSTGRES_PASSWORD: ai_db
      POSTGRES_DB: ai
    volumes:
      - ai_db:/var/lib/postgresql/data
      - ./postgres-init/ais/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tiniping_network


  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    restart: always
    ports:
      - "9411:9411"
    networks:
      - tiniping_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - tiniping_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3010:3000"
    networks:
      - tiniping_network

volumes:
  logistics_db:
  user_db:
  hub_db:
  ai_db:

networks:
  tiniping_network:
    driver: bridge