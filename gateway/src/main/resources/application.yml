# 서비스 이름 및 환경 분리
spring:
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  application:
    name: gateway
  profiles:
    active: dev
  cloud:
    gateway:
      routes: # Spring Cloud Gateway의 라우팅 설정
        - id: user # 라우트 식별자
          uri: lb://user  # 'user'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/api/v1/users/**  # /api/v1/users/** 경로로 들어오는 요청을 이 라우트로 처리
        - id: ai
          uri: lb://ai
          predicates:
            - Path=/api/v1/ai-chat/**, /api/v1/slack/**
        - id: auth
          uri: lb://auth
          predicates:
            - Path=/api/v1/auth/**
        - id: logistics
          uri: lb://logistics
          predicates:
            - Path=/api/v1/shipping-managers/**, /api/v1/vendors/**, /api/v1/products/**, /api/v1/orders/**, /api/v1/deliveries/**, /api/v1/delivery-routes/**
        - id: hub
          uri: lb://hub
          predicates:
            - Path=/api/v1/hub/**, /api/v1/hub-path/**
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정


server:
  port: 19095

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 60000
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 20s

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true